/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"fmt"
)

// checks if the CloudPaymentsThreeDSecure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudPaymentsThreeDSecure{}

// CloudPaymentsThreeDSecure struct for CloudPaymentsThreeDSecure
type CloudPaymentsThreeDSecure struct {
	PaReq string `json:"pa_req"`
	Md string `json:"md"`
	AcsUrl string `json:"acs_url"`
	AdditionalProperties map[string]interface{}
}

type _CloudPaymentsThreeDSecure CloudPaymentsThreeDSecure

// NewCloudPaymentsThreeDSecure instantiates a new CloudPaymentsThreeDSecure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudPaymentsThreeDSecure(paReq string, md string, acsUrl string) *CloudPaymentsThreeDSecure {
	this := CloudPaymentsThreeDSecure{}
	this.PaReq = paReq
	this.Md = md
	this.AcsUrl = acsUrl
	return &this
}

// NewCloudPaymentsThreeDSecureWithDefaults instantiates a new CloudPaymentsThreeDSecure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudPaymentsThreeDSecureWithDefaults() *CloudPaymentsThreeDSecure {
	this := CloudPaymentsThreeDSecure{}
	return &this
}

// GetPaReq returns the PaReq field value
func (o *CloudPaymentsThreeDSecure) GetPaReq() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PaReq
}

// GetPaReqOk returns a tuple with the PaReq field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsThreeDSecure) GetPaReqOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaReq, true
}

// SetPaReq sets field value
func (o *CloudPaymentsThreeDSecure) SetPaReq(v string) {
	o.PaReq = v
}

// GetMd returns the Md field value
func (o *CloudPaymentsThreeDSecure) GetMd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Md
}

// GetMdOk returns a tuple with the Md field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsThreeDSecure) GetMdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Md, true
}

// SetMd sets field value
func (o *CloudPaymentsThreeDSecure) SetMd(v string) {
	o.Md = v
}

// GetAcsUrl returns the AcsUrl field value
func (o *CloudPaymentsThreeDSecure) GetAcsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AcsUrl
}

// GetAcsUrlOk returns a tuple with the AcsUrl field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsThreeDSecure) GetAcsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcsUrl, true
}

// SetAcsUrl sets field value
func (o *CloudPaymentsThreeDSecure) SetAcsUrl(v string) {
	o.AcsUrl = v
}

func (o CloudPaymentsThreeDSecure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudPaymentsThreeDSecure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pa_req"] = o.PaReq
	toSerialize["md"] = o.Md
	toSerialize["acs_url"] = o.AcsUrl

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CloudPaymentsThreeDSecure) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pa_req",
		"md",
		"acs_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudPaymentsThreeDSecure := _CloudPaymentsThreeDSecure{}

	err = json.Unmarshal(data, &varCloudPaymentsThreeDSecure)

	if err != nil {
		return err
	}

	*o = CloudPaymentsThreeDSecure(varCloudPaymentsThreeDSecure)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pa_req")
		delete(additionalProperties, "md")
		delete(additionalProperties, "acs_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCloudPaymentsThreeDSecure struct {
	value *CloudPaymentsThreeDSecure
	isSet bool
}

func (v NullableCloudPaymentsThreeDSecure) Get() *CloudPaymentsThreeDSecure {
	return v.value
}

func (v *NullableCloudPaymentsThreeDSecure) Set(val *CloudPaymentsThreeDSecure) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudPaymentsThreeDSecure) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudPaymentsThreeDSecure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudPaymentsThreeDSecure(val *CloudPaymentsThreeDSecure) *NullableCloudPaymentsThreeDSecure {
	return &NullableCloudPaymentsThreeDSecure{value: val, isSet: true}
}

func (v NullableCloudPaymentsThreeDSecure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudPaymentsThreeDSecure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


