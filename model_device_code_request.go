/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
)

// checks if the DeviceCodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeviceCodeRequest{}

// DeviceCodeRequest Serializer for checking device code status.  Used for GET /v1/account/codes/{code}/ endpoint. Returns different fields based on the code status.
type DeviceCodeRequest struct {
	Status *DeviceCodeStatus `json:"status,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DeviceCodeRequest DeviceCodeRequest

// NewDeviceCodeRequest instantiates a new DeviceCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeviceCodeRequest() *DeviceCodeRequest {
	this := DeviceCodeRequest{}
	return &this
}

// NewDeviceCodeRequestWithDefaults instantiates a new DeviceCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeviceCodeRequestWithDefaults() *DeviceCodeRequest {
	this := DeviceCodeRequest{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DeviceCodeRequest) GetStatus() DeviceCodeStatus {
	if o == nil || IsNil(o.Status) {
		var ret DeviceCodeStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeviceCodeRequest) GetStatusOk() (*DeviceCodeStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DeviceCodeRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given DeviceCodeStatus and assigns it to the Status field.
func (o *DeviceCodeRequest) SetStatus(v DeviceCodeStatus) {
	o.Status = &v
}

func (o DeviceCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeviceCodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DeviceCodeRequest) UnmarshalJSON(data []byte) (err error) {
	varDeviceCodeRequest := _DeviceCodeRequest{}

	err = json.Unmarshal(data, &varDeviceCodeRequest)

	if err != nil {
		return err
	}

	*o = DeviceCodeRequest(varDeviceCodeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDeviceCodeRequest struct {
	value *DeviceCodeRequest
	isSet bool
}

func (v NullableDeviceCodeRequest) Get() *DeviceCodeRequest {
	return v.value
}

func (v *NullableDeviceCodeRequest) Set(val *DeviceCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeviceCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeviceCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeviceCodeRequest(val *DeviceCodeRequest) *NullableDeviceCodeRequest {
	return &NullableDeviceCodeRequest{value: val, isSet: true}
}

func (v NullableDeviceCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeviceCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


