/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingAccount{}

// BillingAccount struct for BillingAccount
type BillingAccount struct {
	Id string `json:"id"`
	DefaultPaymentMethod NullablePaymentMethod `json:"default_payment_method"`
	CurrentSubscription NullableSubscription `json:"current_subscription"`
}

type _BillingAccount BillingAccount

// NewBillingAccount instantiates a new BillingAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingAccount(id string, defaultPaymentMethod NullablePaymentMethod, currentSubscription NullableSubscription) *BillingAccount {
	this := BillingAccount{}
	this.Id = id
	this.DefaultPaymentMethod = defaultPaymentMethod
	this.CurrentSubscription = currentSubscription
	return &this
}

// NewBillingAccountWithDefaults instantiates a new BillingAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingAccountWithDefaults() *BillingAccount {
	this := BillingAccount{}
	return &this
}

// GetId returns the Id field value
func (o *BillingAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BillingAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BillingAccount) SetId(v string) {
	o.Id = v
}

// GetDefaultPaymentMethod returns the DefaultPaymentMethod field value
// If the value is explicit nil, the zero value for PaymentMethod will be returned
func (o *BillingAccount) GetDefaultPaymentMethod() PaymentMethod {
	if o == nil || o.DefaultPaymentMethod.Get() == nil {
		var ret PaymentMethod
		return ret
	}

	return *o.DefaultPaymentMethod.Get()
}

// GetDefaultPaymentMethodOk returns a tuple with the DefaultPaymentMethod field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingAccount) GetDefaultPaymentMethodOk() (*PaymentMethod, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultPaymentMethod.Get(), o.DefaultPaymentMethod.IsSet()
}

// SetDefaultPaymentMethod sets field value
func (o *BillingAccount) SetDefaultPaymentMethod(v PaymentMethod) {
	o.DefaultPaymentMethod.Set(&v)
}

// GetCurrentSubscription returns the CurrentSubscription field value
// If the value is explicit nil, the zero value for Subscription will be returned
func (o *BillingAccount) GetCurrentSubscription() Subscription {
	if o == nil || o.CurrentSubscription.Get() == nil {
		var ret Subscription
		return ret
	}

	return *o.CurrentSubscription.Get()
}

// GetCurrentSubscriptionOk returns a tuple with the CurrentSubscription field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingAccount) GetCurrentSubscriptionOk() (*Subscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSubscription.Get(), o.CurrentSubscription.IsSet()
}

// SetCurrentSubscription sets field value
func (o *BillingAccount) SetCurrentSubscription(v Subscription) {
	o.CurrentSubscription.Set(&v)
}

func (o BillingAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["default_payment_method"] = o.DefaultPaymentMethod.Get()
	toSerialize["current_subscription"] = o.CurrentSubscription.Get()
	return toSerialize, nil
}

func (o *BillingAccount) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"default_payment_method",
		"current_subscription",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingAccount := _BillingAccount{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingAccount)

	if err != nil {
		return err
	}

	*o = BillingAccount(varBillingAccount)

	return err
}

type NullableBillingAccount struct {
	value *BillingAccount
	isSet bool
}

func (v NullableBillingAccount) Get() *BillingAccount {
	return v.value
}

func (v *NullableBillingAccount) Set(val *BillingAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingAccount(val *BillingAccount) *NullableBillingAccount {
	return &NullableBillingAccount{value: val, isSet: true}
}

func (v NullableBillingAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


