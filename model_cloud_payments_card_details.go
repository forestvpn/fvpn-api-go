/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CloudPaymentsCardDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudPaymentsCardDetails{}

// CloudPaymentsCardDetails struct for CloudPaymentsCardDetails
type CloudPaymentsCardDetails struct {
	First6 NullableString `json:"first6,omitempty"`
	Last4 string `json:"last4"`
	ExpYear int64 `json:"exp_year"`
	ExpMonth int64 `json:"exp_month"`
	ExpiresAt time.Time `json:"expires_at"`
	Brand string `json:"brand"`
	Country NullableCountry `json:"country,omitempty"`
}

type _CloudPaymentsCardDetails CloudPaymentsCardDetails

// NewCloudPaymentsCardDetails instantiates a new CloudPaymentsCardDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudPaymentsCardDetails(last4 string, expYear int64, expMonth int64, expiresAt time.Time, brand string) *CloudPaymentsCardDetails {
	this := CloudPaymentsCardDetails{}
	this.Last4 = last4
	this.ExpYear = expYear
	this.ExpMonth = expMonth
	this.ExpiresAt = expiresAt
	this.Brand = brand
	return &this
}

// NewCloudPaymentsCardDetailsWithDefaults instantiates a new CloudPaymentsCardDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudPaymentsCardDetailsWithDefaults() *CloudPaymentsCardDetails {
	this := CloudPaymentsCardDetails{}
	return &this
}

// GetFirst6 returns the First6 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudPaymentsCardDetails) GetFirst6() string {
	if o == nil || IsNil(o.First6.Get()) {
		var ret string
		return ret
	}
	return *o.First6.Get()
}

// GetFirst6Ok returns a tuple with the First6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudPaymentsCardDetails) GetFirst6Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.First6.Get(), o.First6.IsSet()
}

// HasFirst6 returns a boolean if a field has been set.
func (o *CloudPaymentsCardDetails) HasFirst6() bool {
	if o != nil && o.First6.IsSet() {
		return true
	}

	return false
}

// SetFirst6 gets a reference to the given NullableString and assigns it to the First6 field.
func (o *CloudPaymentsCardDetails) SetFirst6(v string) {
	o.First6.Set(&v)
}
// SetFirst6Nil sets the value for First6 to be an explicit nil
func (o *CloudPaymentsCardDetails) SetFirst6Nil() {
	o.First6.Set(nil)
}

// UnsetFirst6 ensures that no value is present for First6, not even an explicit nil
func (o *CloudPaymentsCardDetails) UnsetFirst6() {
	o.First6.Unset()
}

// GetLast4 returns the Last4 field value
func (o *CloudPaymentsCardDetails) GetLast4() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Last4
}

// GetLast4Ok returns a tuple with the Last4 field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsCardDetails) GetLast4Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last4, true
}

// SetLast4 sets field value
func (o *CloudPaymentsCardDetails) SetLast4(v string) {
	o.Last4 = v
}

// GetExpYear returns the ExpYear field value
func (o *CloudPaymentsCardDetails) GetExpYear() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpYear
}

// GetExpYearOk returns a tuple with the ExpYear field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsCardDetails) GetExpYearOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpYear, true
}

// SetExpYear sets field value
func (o *CloudPaymentsCardDetails) SetExpYear(v int64) {
	o.ExpYear = v
}

// GetExpMonth returns the ExpMonth field value
func (o *CloudPaymentsCardDetails) GetExpMonth() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExpMonth
}

// GetExpMonthOk returns a tuple with the ExpMonth field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsCardDetails) GetExpMonthOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpMonth, true
}

// SetExpMonth sets field value
func (o *CloudPaymentsCardDetails) SetExpMonth(v int64) {
	o.ExpMonth = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *CloudPaymentsCardDetails) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsCardDetails) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *CloudPaymentsCardDetails) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetBrand returns the Brand field value
func (o *CloudPaymentsCardDetails) GetBrand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Brand
}

// GetBrandOk returns a tuple with the Brand field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsCardDetails) GetBrandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Brand, true
}

// SetBrand sets field value
func (o *CloudPaymentsCardDetails) SetBrand(v string) {
	o.Brand = v
}

// GetCountry returns the Country field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudPaymentsCardDetails) GetCountry() Country {
	if o == nil || IsNil(o.Country.Get()) {
		var ret Country
		return ret
	}
	return *o.Country.Get()
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudPaymentsCardDetails) GetCountryOk() (*Country, bool) {
	if o == nil {
		return nil, false
	}
	return o.Country.Get(), o.Country.IsSet()
}

// HasCountry returns a boolean if a field has been set.
func (o *CloudPaymentsCardDetails) HasCountry() bool {
	if o != nil && o.Country.IsSet() {
		return true
	}

	return false
}

// SetCountry gets a reference to the given NullableCountry and assigns it to the Country field.
func (o *CloudPaymentsCardDetails) SetCountry(v Country) {
	o.Country.Set(&v)
}
// SetCountryNil sets the value for Country to be an explicit nil
func (o *CloudPaymentsCardDetails) SetCountryNil() {
	o.Country.Set(nil)
}

// UnsetCountry ensures that no value is present for Country, not even an explicit nil
func (o *CloudPaymentsCardDetails) UnsetCountry() {
	o.Country.Unset()
}

func (o CloudPaymentsCardDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudPaymentsCardDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.First6.IsSet() {
		toSerialize["first6"] = o.First6.Get()
	}
	toSerialize["last4"] = o.Last4
	toSerialize["exp_year"] = o.ExpYear
	toSerialize["exp_month"] = o.ExpMonth
	toSerialize["expires_at"] = o.ExpiresAt
	toSerialize["brand"] = o.Brand
	if o.Country.IsSet() {
		toSerialize["country"] = o.Country.Get()
	}
	return toSerialize, nil
}

func (o *CloudPaymentsCardDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"last4",
		"exp_year",
		"exp_month",
		"expires_at",
		"brand",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudPaymentsCardDetails := _CloudPaymentsCardDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloudPaymentsCardDetails)

	if err != nil {
		return err
	}

	*o = CloudPaymentsCardDetails(varCloudPaymentsCardDetails)

	return err
}

type NullableCloudPaymentsCardDetails struct {
	value *CloudPaymentsCardDetails
	isSet bool
}

func (v NullableCloudPaymentsCardDetails) Get() *CloudPaymentsCardDetails {
	return v.value
}

func (v *NullableCloudPaymentsCardDetails) Set(val *CloudPaymentsCardDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudPaymentsCardDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudPaymentsCardDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudPaymentsCardDetails(val *CloudPaymentsCardDetails) *NullableCloudPaymentsCardDetails {
	return &NullableCloudPaymentsCardDetails{value: val, isSet: true}
}

func (v NullableCloudPaymentsCardDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudPaymentsCardDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


