/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccountTokenPairRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountTokenPairRequest{}

// AccountTokenPairRequest Serializer for obtaining JWT tokens using a 16-digit account number.  This serializer validates the provided account number, normalizes it by removing any non-digit characters, and ensures it is exactly 16 digits long. If the account number is valid and corresponds to an existing account, it issues a pair of JWT tokens (refresh and access tokens).  Attributes:     account_number (str): The 16-digit account number.     access (str): The access token issued upon successful authentication.     refresh (str): The refresh token issued upon successful authentication.  Example:     Request:     {         \"number\": \"1234 5678 9012 3456\"     }      Response:     {         \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",         \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"     }
type AccountTokenPairRequest struct {
	// The 16-digit account number of the user, with optional separators.
	Number string `json:"number"`
}

type _AccountTokenPairRequest AccountTokenPairRequest

// NewAccountTokenPairRequest instantiates a new AccountTokenPairRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTokenPairRequest(number string) *AccountTokenPairRequest {
	this := AccountTokenPairRequest{}
	this.Number = number
	return &this
}

// NewAccountTokenPairRequestWithDefaults instantiates a new AccountTokenPairRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTokenPairRequestWithDefaults() *AccountTokenPairRequest {
	this := AccountTokenPairRequest{}
	return &this
}

// GetNumber returns the Number field value
func (o *AccountTokenPairRequest) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *AccountTokenPairRequest) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *AccountTokenPairRequest) SetNumber(v string) {
	o.Number = v
}

func (o AccountTokenPairRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountTokenPairRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["number"] = o.Number
	return toSerialize, nil
}

func (o *AccountTokenPairRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccountTokenPairRequest := _AccountTokenPairRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccountTokenPairRequest)

	if err != nil {
		return err
	}

	*o = AccountTokenPairRequest(varAccountTokenPairRequest)

	return err
}

type NullableAccountTokenPairRequest struct {
	value *AccountTokenPairRequest
	isSet bool
}

func (v NullableAccountTokenPairRequest) Get() *AccountTokenPairRequest {
	return v.value
}

func (v *NullableAccountTokenPairRequest) Set(val *AccountTokenPairRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTokenPairRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTokenPairRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTokenPairRequest(val *AccountTokenPairRequest) *NullableAccountTokenPairRequest {
	return &NullableAccountTokenPairRequest{value: val, isSet: true}
}

func (v NullableAccountTokenPairRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTokenPairRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


