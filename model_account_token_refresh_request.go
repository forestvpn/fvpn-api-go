/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
)

// checks if the AccountTokenRefreshRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountTokenRefreshRequest{}

// AccountTokenRefreshRequest Serializer for refreshing JWT tokens using a refresh token.  This serializer validates the provided refresh token and issues a new access token if the refresh token is valid.  Attributes:     refresh (str): The refresh token to be used for refreshing the access token.     access (str): The new access token issued upon successful token refresh.  Example:     Request:     {         \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"     }      Response:     {         \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"     }
type AccountTokenRefreshRequest struct {
	Refresh *string `json:"refresh,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AccountTokenRefreshRequest AccountTokenRefreshRequest

// NewAccountTokenRefreshRequest instantiates a new AccountTokenRefreshRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountTokenRefreshRequest() *AccountTokenRefreshRequest {
	this := AccountTokenRefreshRequest{}
	return &this
}

// NewAccountTokenRefreshRequestWithDefaults instantiates a new AccountTokenRefreshRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountTokenRefreshRequestWithDefaults() *AccountTokenRefreshRequest {
	this := AccountTokenRefreshRequest{}
	return &this
}

// GetRefresh returns the Refresh field value if set, zero value otherwise.
func (o *AccountTokenRefreshRequest) GetRefresh() string {
	if o == nil || IsNil(o.Refresh) {
		var ret string
		return ret
	}
	return *o.Refresh
}

// GetRefreshOk returns a tuple with the Refresh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountTokenRefreshRequest) GetRefreshOk() (*string, bool) {
	if o == nil || IsNil(o.Refresh) {
		return nil, false
	}
	return o.Refresh, true
}

// HasRefresh returns a boolean if a field has been set.
func (o *AccountTokenRefreshRequest) HasRefresh() bool {
	if o != nil && !IsNil(o.Refresh) {
		return true
	}

	return false
}

// SetRefresh gets a reference to the given string and assigns it to the Refresh field.
func (o *AccountTokenRefreshRequest) SetRefresh(v string) {
	o.Refresh = &v
}

func (o AccountTokenRefreshRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountTokenRefreshRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Refresh) {
		toSerialize["refresh"] = o.Refresh
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AccountTokenRefreshRequest) UnmarshalJSON(data []byte) (err error) {
	varAccountTokenRefreshRequest := _AccountTokenRefreshRequest{}

	err = json.Unmarshal(data, &varAccountTokenRefreshRequest)

	if err != nil {
		return err
	}

	*o = AccountTokenRefreshRequest(varAccountTokenRefreshRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "refresh")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAccountTokenRefreshRequest struct {
	value *AccountTokenRefreshRequest
	isSet bool
}

func (v NullableAccountTokenRefreshRequest) Get() *AccountTokenRefreshRequest {
	return v.value
}

func (v *NullableAccountTokenRefreshRequest) Set(val *AccountTokenRefreshRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountTokenRefreshRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountTokenRefreshRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountTokenRefreshRequest(val *AccountTokenRefreshRequest) *NullableAccountTokenRefreshRequest {
	return &NullableAccountTokenRefreshRequest{value: val, isSet: true}
}

func (v NullableAccountTokenRefreshRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountTokenRefreshRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


