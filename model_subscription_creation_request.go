/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubscriptionCreationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionCreationRequest{}

// SubscriptionCreationRequest struct for SubscriptionCreationRequest
type SubscriptionCreationRequest struct {
	PlanPrice string `json:"plan_price"`
	PaymentMethod NullableString `json:"payment_method,omitempty"`
}

type _SubscriptionCreationRequest SubscriptionCreationRequest

// NewSubscriptionCreationRequest instantiates a new SubscriptionCreationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionCreationRequest(planPrice string) *SubscriptionCreationRequest {
	this := SubscriptionCreationRequest{}
	this.PlanPrice = planPrice
	return &this
}

// NewSubscriptionCreationRequestWithDefaults instantiates a new SubscriptionCreationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionCreationRequestWithDefaults() *SubscriptionCreationRequest {
	this := SubscriptionCreationRequest{}
	return &this
}

// GetPlanPrice returns the PlanPrice field value
func (o *SubscriptionCreationRequest) GetPlanPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlanPrice
}

// GetPlanPriceOk returns a tuple with the PlanPrice field value
// and a boolean to check if the value has been set.
func (o *SubscriptionCreationRequest) GetPlanPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanPrice, true
}

// SetPlanPrice sets field value
func (o *SubscriptionCreationRequest) SetPlanPrice(v string) {
	o.PlanPrice = v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionCreationRequest) GetPaymentMethod() string {
	if o == nil || IsNil(o.PaymentMethod.Get()) {
		var ret string
		return ret
	}
	return *o.PaymentMethod.Get()
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionCreationRequest) GetPaymentMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentMethod.Get(), o.PaymentMethod.IsSet()
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *SubscriptionCreationRequest) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod.IsSet() {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given NullableString and assigns it to the PaymentMethod field.
func (o *SubscriptionCreationRequest) SetPaymentMethod(v string) {
	o.PaymentMethod.Set(&v)
}
// SetPaymentMethodNil sets the value for PaymentMethod to be an explicit nil
func (o *SubscriptionCreationRequest) SetPaymentMethodNil() {
	o.PaymentMethod.Set(nil)
}

// UnsetPaymentMethod ensures that no value is present for PaymentMethod, not even an explicit nil
func (o *SubscriptionCreationRequest) UnsetPaymentMethod() {
	o.PaymentMethod.Unset()
}

func (o SubscriptionCreationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionCreationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plan_price"] = o.PlanPrice
	if o.PaymentMethod.IsSet() {
		toSerialize["payment_method"] = o.PaymentMethod.Get()
	}
	return toSerialize, nil
}

func (o *SubscriptionCreationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"plan_price",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionCreationRequest := _SubscriptionCreationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionCreationRequest)

	if err != nil {
		return err
	}

	*o = SubscriptionCreationRequest(varSubscriptionCreationRequest)

	return err
}

type NullableSubscriptionCreationRequest struct {
	value *SubscriptionCreationRequest
	isSet bool
}

func (v NullableSubscriptionCreationRequest) Get() *SubscriptionCreationRequest {
	return v.value
}

func (v *NullableSubscriptionCreationRequest) Set(val *SubscriptionCreationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionCreationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionCreationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionCreationRequest(val *SubscriptionCreationRequest) *NullableSubscriptionCreationRequest {
	return &NullableSubscriptionCreationRequest{value: val, isSet: true}
}

func (v NullableSubscriptionCreationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionCreationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


