/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InvoiceTotalDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceTotalDetails{}

// InvoiceTotalDetails struct for InvoiceTotalDetails
type InvoiceTotalDetails struct {
	TotalAmount float64 `json:"total_amount"`
	SubtotalAmount float64 `json:"subtotal_amount"`
	DiscountAmount float64 `json:"discount_amount"`
	ShippingAmount float64 `json:"shipping_amount"`
	TaxAmount float64 `json:"tax_amount"`
	PaidAmount float64 `json:"paid_amount"`
	PaidWithWalletAmount float64 `json:"paid_with_wallet_amount"`
	DueAmount float64 `json:"due_amount"`
}

type _InvoiceTotalDetails InvoiceTotalDetails

// NewInvoiceTotalDetails instantiates a new InvoiceTotalDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceTotalDetails(totalAmount float64, subtotalAmount float64, discountAmount float64, shippingAmount float64, taxAmount float64, paidAmount float64, paidWithWalletAmount float64, dueAmount float64) *InvoiceTotalDetails {
	this := InvoiceTotalDetails{}
	this.TotalAmount = totalAmount
	this.SubtotalAmount = subtotalAmount
	this.DiscountAmount = discountAmount
	this.ShippingAmount = shippingAmount
	this.TaxAmount = taxAmount
	this.PaidAmount = paidAmount
	this.PaidWithWalletAmount = paidWithWalletAmount
	this.DueAmount = dueAmount
	return &this
}

// NewInvoiceTotalDetailsWithDefaults instantiates a new InvoiceTotalDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceTotalDetailsWithDefaults() *InvoiceTotalDetails {
	this := InvoiceTotalDetails{}
	return &this
}

// GetTotalAmount returns the TotalAmount field value
func (o *InvoiceTotalDetails) GetTotalAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TotalAmount
}

// GetTotalAmountOk returns a tuple with the TotalAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetTotalAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalAmount, true
}

// SetTotalAmount sets field value
func (o *InvoiceTotalDetails) SetTotalAmount(v float64) {
	o.TotalAmount = v
}

// GetSubtotalAmount returns the SubtotalAmount field value
func (o *InvoiceTotalDetails) GetSubtotalAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SubtotalAmount
}

// GetSubtotalAmountOk returns a tuple with the SubtotalAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetSubtotalAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubtotalAmount, true
}

// SetSubtotalAmount sets field value
func (o *InvoiceTotalDetails) SetSubtotalAmount(v float64) {
	o.SubtotalAmount = v
}

// GetDiscountAmount returns the DiscountAmount field value
func (o *InvoiceTotalDetails) GetDiscountAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetDiscountAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountAmount, true
}

// SetDiscountAmount sets field value
func (o *InvoiceTotalDetails) SetDiscountAmount(v float64) {
	o.DiscountAmount = v
}

// GetShippingAmount returns the ShippingAmount field value
func (o *InvoiceTotalDetails) GetShippingAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.ShippingAmount
}

// GetShippingAmountOk returns a tuple with the ShippingAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetShippingAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShippingAmount, true
}

// SetShippingAmount sets field value
func (o *InvoiceTotalDetails) SetShippingAmount(v float64) {
	o.ShippingAmount = v
}

// GetTaxAmount returns the TaxAmount field value
func (o *InvoiceTotalDetails) GetTaxAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetTaxAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxAmount, true
}

// SetTaxAmount sets field value
func (o *InvoiceTotalDetails) SetTaxAmount(v float64) {
	o.TaxAmount = v
}

// GetPaidAmount returns the PaidAmount field value
func (o *InvoiceTotalDetails) GetPaidAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.PaidAmount
}

// GetPaidAmountOk returns a tuple with the PaidAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetPaidAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaidAmount, true
}

// SetPaidAmount sets field value
func (o *InvoiceTotalDetails) SetPaidAmount(v float64) {
	o.PaidAmount = v
}

// GetPaidWithWalletAmount returns the PaidWithWalletAmount field value
func (o *InvoiceTotalDetails) GetPaidWithWalletAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.PaidWithWalletAmount
}

// GetPaidWithWalletAmountOk returns a tuple with the PaidWithWalletAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetPaidWithWalletAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaidWithWalletAmount, true
}

// SetPaidWithWalletAmount sets field value
func (o *InvoiceTotalDetails) SetPaidWithWalletAmount(v float64) {
	o.PaidWithWalletAmount = v
}

// GetDueAmount returns the DueAmount field value
func (o *InvoiceTotalDetails) GetDueAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DueAmount
}

// GetDueAmountOk returns a tuple with the DueAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceTotalDetails) GetDueAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DueAmount, true
}

// SetDueAmount sets field value
func (o *InvoiceTotalDetails) SetDueAmount(v float64) {
	o.DueAmount = v
}

func (o InvoiceTotalDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceTotalDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_amount"] = o.TotalAmount
	toSerialize["subtotal_amount"] = o.SubtotalAmount
	toSerialize["discount_amount"] = o.DiscountAmount
	toSerialize["shipping_amount"] = o.ShippingAmount
	toSerialize["tax_amount"] = o.TaxAmount
	toSerialize["paid_amount"] = o.PaidAmount
	toSerialize["paid_with_wallet_amount"] = o.PaidWithWalletAmount
	toSerialize["due_amount"] = o.DueAmount
	return toSerialize, nil
}

func (o *InvoiceTotalDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_amount",
		"subtotal_amount",
		"discount_amount",
		"shipping_amount",
		"tax_amount",
		"paid_amount",
		"paid_with_wallet_amount",
		"due_amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceTotalDetails := _InvoiceTotalDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceTotalDetails)

	if err != nil {
		return err
	}

	*o = InvoiceTotalDetails(varInvoiceTotalDetails)

	return err
}

type NullableInvoiceTotalDetails struct {
	value *InvoiceTotalDetails
	isSet bool
}

func (v NullableInvoiceTotalDetails) Get() *InvoiceTotalDetails {
	return v.value
}

func (v *NullableInvoiceTotalDetails) Set(val *InvoiceTotalDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceTotalDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceTotalDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceTotalDetails(val *InvoiceTotalDetails) *NullableInvoiceTotalDetails {
	return &NullableInvoiceTotalDetails{value: val, isSet: true}
}

func (v NullableInvoiceTotalDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceTotalDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


