/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the InvoiceLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceLine{}

// InvoiceLine struct for InvoiceLine
type InvoiceLine struct {
	Id string `json:"id"`
	Description string `json:"description"`
	UnitAmount float64 `json:"unit_amount"`
	TaxAmount float64 `json:"tax_amount"`
	DiscountAmount float64 `json:"discount_amount"`
	Quantity *int64 `json:"quantity,omitempty"`
	Amount float64 `json:"amount"`
	Currency string `json:"currency"`
	CreatedAt time.Time `json:"created_at"`
}

type _InvoiceLine InvoiceLine

// NewInvoiceLine instantiates a new InvoiceLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceLine(id string, description string, unitAmount float64, taxAmount float64, discountAmount float64, amount float64, currency string, createdAt time.Time) *InvoiceLine {
	this := InvoiceLine{}
	this.Id = id
	this.Description = description
	this.UnitAmount = unitAmount
	this.TaxAmount = taxAmount
	this.DiscountAmount = discountAmount
	this.Amount = amount
	this.Currency = currency
	this.CreatedAt = createdAt
	return &this
}

// NewInvoiceLineWithDefaults instantiates a new InvoiceLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceLineWithDefaults() *InvoiceLine {
	this := InvoiceLine{}
	return &this
}

// GetId returns the Id field value
func (o *InvoiceLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InvoiceLine) SetId(v string) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *InvoiceLine) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *InvoiceLine) SetDescription(v string) {
	o.Description = v
}

// GetUnitAmount returns the UnitAmount field value
func (o *InvoiceLine) GetUnitAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.UnitAmount
}

// GetUnitAmountOk returns a tuple with the UnitAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetUnitAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnitAmount, true
}

// SetUnitAmount sets field value
func (o *InvoiceLine) SetUnitAmount(v float64) {
	o.UnitAmount = v
}

// GetTaxAmount returns the TaxAmount field value
func (o *InvoiceLine) GetTaxAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetTaxAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxAmount, true
}

// SetTaxAmount sets field value
func (o *InvoiceLine) SetTaxAmount(v float64) {
	o.TaxAmount = v
}

// GetDiscountAmount returns the DiscountAmount field value
func (o *InvoiceLine) GetDiscountAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetDiscountAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscountAmount, true
}

// SetDiscountAmount sets field value
func (o *InvoiceLine) SetDiscountAmount(v float64) {
	o.DiscountAmount = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *InvoiceLine) GetQuantity() int64 {
	if o == nil || IsNil(o.Quantity) {
		var ret int64
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *InvoiceLine) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int64 and assigns it to the Quantity field.
func (o *InvoiceLine) SetQuantity(v int64) {
	o.Quantity = &v
}

// GetAmount returns the Amount field value
func (o *InvoiceLine) GetAmount() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetAmountOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InvoiceLine) SetAmount(v float64) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *InvoiceLine) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *InvoiceLine) SetCurrency(v string) {
	o.Currency = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *InvoiceLine) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *InvoiceLine) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *InvoiceLine) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o InvoiceLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["description"] = o.Description
	toSerialize["unit_amount"] = o.UnitAmount
	toSerialize["tax_amount"] = o.TaxAmount
	toSerialize["discount_amount"] = o.DiscountAmount
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	toSerialize["amount"] = o.Amount
	toSerialize["currency"] = o.Currency
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *InvoiceLine) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"description",
		"unit_amount",
		"tax_amount",
		"discount_amount",
		"amount",
		"currency",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInvoiceLine := _InvoiceLine{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInvoiceLine)

	if err != nil {
		return err
	}

	*o = InvoiceLine(varInvoiceLine)

	return err
}

type NullableInvoiceLine struct {
	value *InvoiceLine
	isSet bool
}

func (v NullableInvoiceLine) Get() *InvoiceLine {
	return v.value
}

func (v *NullableInvoiceLine) Set(val *InvoiceLine) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceLine) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceLine(val *InvoiceLine) *NullableInvoiceLine {
	return &NullableInvoiceLine{value: val, isSet: true}
}

func (v NullableInvoiceLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


