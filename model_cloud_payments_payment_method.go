/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CloudPaymentsPaymentMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudPaymentsPaymentMethod{}

// CloudPaymentsPaymentMethod struct for CloudPaymentsPaymentMethod
type CloudPaymentsPaymentMethod struct {
	Id string `json:"id"`
	Type NullableString `json:"type,omitempty"`
	Card CloudPaymentsCardDetails `json:"card"`
	IsExpired bool `json:"is_expired"`
	NeedAuthentication bool `json:"need_authentication"`
	ThreeDs CloudPaymentsThreeDSecure `json:"three_ds"`
	CreatedAt time.Time `json:"created_at"`
}

type _CloudPaymentsPaymentMethod CloudPaymentsPaymentMethod

// NewCloudPaymentsPaymentMethod instantiates a new CloudPaymentsPaymentMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudPaymentsPaymentMethod(id string, card CloudPaymentsCardDetails, isExpired bool, needAuthentication bool, threeDs CloudPaymentsThreeDSecure, createdAt time.Time) *CloudPaymentsPaymentMethod {
	this := CloudPaymentsPaymentMethod{}
	this.Id = id
	this.Card = card
	this.IsExpired = isExpired
	this.NeedAuthentication = needAuthentication
	this.ThreeDs = threeDs
	this.CreatedAt = createdAt
	return &this
}

// NewCloudPaymentsPaymentMethodWithDefaults instantiates a new CloudPaymentsPaymentMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudPaymentsPaymentMethodWithDefaults() *CloudPaymentsPaymentMethod {
	this := CloudPaymentsPaymentMethod{}
	return &this
}

// GetId returns the Id field value
func (o *CloudPaymentsPaymentMethod) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CloudPaymentsPaymentMethod) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CloudPaymentsPaymentMethod) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CloudPaymentsPaymentMethod) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *CloudPaymentsPaymentMethod) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *CloudPaymentsPaymentMethod) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *CloudPaymentsPaymentMethod) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *CloudPaymentsPaymentMethod) UnsetType() {
	o.Type.Unset()
}

// GetCard returns the Card field value
func (o *CloudPaymentsPaymentMethod) GetCard() CloudPaymentsCardDetails {
	if o == nil {
		var ret CloudPaymentsCardDetails
		return ret
	}

	return o.Card
}

// GetCardOk returns a tuple with the Card field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetCardOk() (*CloudPaymentsCardDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Card, true
}

// SetCard sets field value
func (o *CloudPaymentsPaymentMethod) SetCard(v CloudPaymentsCardDetails) {
	o.Card = v
}

// GetIsExpired returns the IsExpired field value
func (o *CloudPaymentsPaymentMethod) GetIsExpired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsExpired
}

// GetIsExpiredOk returns a tuple with the IsExpired field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetIsExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsExpired, true
}

// SetIsExpired sets field value
func (o *CloudPaymentsPaymentMethod) SetIsExpired(v bool) {
	o.IsExpired = v
}

// GetNeedAuthentication returns the NeedAuthentication field value
func (o *CloudPaymentsPaymentMethod) GetNeedAuthentication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.NeedAuthentication
}

// GetNeedAuthenticationOk returns a tuple with the NeedAuthentication field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetNeedAuthenticationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NeedAuthentication, true
}

// SetNeedAuthentication sets field value
func (o *CloudPaymentsPaymentMethod) SetNeedAuthentication(v bool) {
	o.NeedAuthentication = v
}

// GetThreeDs returns the ThreeDs field value
func (o *CloudPaymentsPaymentMethod) GetThreeDs() CloudPaymentsThreeDSecure {
	if o == nil {
		var ret CloudPaymentsThreeDSecure
		return ret
	}

	return o.ThreeDs
}

// GetThreeDsOk returns a tuple with the ThreeDs field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetThreeDsOk() (*CloudPaymentsThreeDSecure, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThreeDs, true
}

// SetThreeDs sets field value
func (o *CloudPaymentsPaymentMethod) SetThreeDs(v CloudPaymentsThreeDSecure) {
	o.ThreeDs = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CloudPaymentsPaymentMethod) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CloudPaymentsPaymentMethod) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CloudPaymentsPaymentMethod) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

func (o CloudPaymentsPaymentMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudPaymentsPaymentMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	toSerialize["card"] = o.Card
	toSerialize["is_expired"] = o.IsExpired
	toSerialize["need_authentication"] = o.NeedAuthentication
	toSerialize["three_ds"] = o.ThreeDs
	toSerialize["created_at"] = o.CreatedAt
	return toSerialize, nil
}

func (o *CloudPaymentsPaymentMethod) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"card",
		"is_expired",
		"need_authentication",
		"three_ds",
		"created_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCloudPaymentsPaymentMethod := _CloudPaymentsPaymentMethod{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCloudPaymentsPaymentMethod)

	if err != nil {
		return err
	}

	*o = CloudPaymentsPaymentMethod(varCloudPaymentsPaymentMethod)

	return err
}

type NullableCloudPaymentsPaymentMethod struct {
	value *CloudPaymentsPaymentMethod
	isSet bool
}

func (v NullableCloudPaymentsPaymentMethod) Get() *CloudPaymentsPaymentMethod {
	return v.value
}

func (v *NullableCloudPaymentsPaymentMethod) Set(val *CloudPaymentsPaymentMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudPaymentsPaymentMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudPaymentsPaymentMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudPaymentsPaymentMethod(val *CloudPaymentsPaymentMethod) *NullableCloudPaymentsPaymentMethod {
	return &NullableCloudPaymentsPaymentMethod{value: val, isSet: true}
}

func (v NullableCloudPaymentsPaymentMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudPaymentsPaymentMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


