/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BillingDataQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingDataQuota{}

// BillingDataQuota Serializer for data quota information.
type BillingDataQuota struct {
	CurrentUsageGb float64 `json:"current_usage_gb"`
	QuotaGb int64 `json:"quota_gb"`
	UsagePercentage float64 `json:"usage_percentage"`
	IsWithinQuota bool `json:"is_within_quota"`
	IsUnlimited bool `json:"is_unlimited"`
	WarningLevel NullableString `json:"warning_level"`
	Message string `json:"message"`
	Period BillingPeriod `json:"period"`
}

type _BillingDataQuota BillingDataQuota

// NewBillingDataQuota instantiates a new BillingDataQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingDataQuota(currentUsageGb float64, quotaGb int64, usagePercentage float64, isWithinQuota bool, isUnlimited bool, warningLevel NullableString, message string, period BillingPeriod) *BillingDataQuota {
	this := BillingDataQuota{}
	this.CurrentUsageGb = currentUsageGb
	this.QuotaGb = quotaGb
	this.UsagePercentage = usagePercentage
	this.IsWithinQuota = isWithinQuota
	this.IsUnlimited = isUnlimited
	this.WarningLevel = warningLevel
	this.Message = message
	this.Period = period
	return &this
}

// NewBillingDataQuotaWithDefaults instantiates a new BillingDataQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingDataQuotaWithDefaults() *BillingDataQuota {
	this := BillingDataQuota{}
	return &this
}

// GetCurrentUsageGb returns the CurrentUsageGb field value
func (o *BillingDataQuota) GetCurrentUsageGb() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.CurrentUsageGb
}

// GetCurrentUsageGbOk returns a tuple with the CurrentUsageGb field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetCurrentUsageGbOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentUsageGb, true
}

// SetCurrentUsageGb sets field value
func (o *BillingDataQuota) SetCurrentUsageGb(v float64) {
	o.CurrentUsageGb = v
}

// GetQuotaGb returns the QuotaGb field value
func (o *BillingDataQuota) GetQuotaGb() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QuotaGb
}

// GetQuotaGbOk returns a tuple with the QuotaGb field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetQuotaGbOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaGb, true
}

// SetQuotaGb sets field value
func (o *BillingDataQuota) SetQuotaGb(v int64) {
	o.QuotaGb = v
}

// GetUsagePercentage returns the UsagePercentage field value
func (o *BillingDataQuota) GetUsagePercentage() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.UsagePercentage
}

// GetUsagePercentageOk returns a tuple with the UsagePercentage field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetUsagePercentageOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsagePercentage, true
}

// SetUsagePercentage sets field value
func (o *BillingDataQuota) SetUsagePercentage(v float64) {
	o.UsagePercentage = v
}

// GetIsWithinQuota returns the IsWithinQuota field value
func (o *BillingDataQuota) GetIsWithinQuota() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsWithinQuota
}

// GetIsWithinQuotaOk returns a tuple with the IsWithinQuota field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetIsWithinQuotaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsWithinQuota, true
}

// SetIsWithinQuota sets field value
func (o *BillingDataQuota) SetIsWithinQuota(v bool) {
	o.IsWithinQuota = v
}

// GetIsUnlimited returns the IsUnlimited field value
func (o *BillingDataQuota) GetIsUnlimited() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUnlimited
}

// GetIsUnlimitedOk returns a tuple with the IsUnlimited field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetIsUnlimitedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUnlimited, true
}

// SetIsUnlimited sets field value
func (o *BillingDataQuota) SetIsUnlimited(v bool) {
	o.IsUnlimited = v
}

// GetWarningLevel returns the WarningLevel field value
// If the value is explicit nil, the zero value for string will be returned
func (o *BillingDataQuota) GetWarningLevel() string {
	if o == nil || o.WarningLevel.Get() == nil {
		var ret string
		return ret
	}

	return *o.WarningLevel.Get()
}

// GetWarningLevelOk returns a tuple with the WarningLevel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BillingDataQuota) GetWarningLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WarningLevel.Get(), o.WarningLevel.IsSet()
}

// SetWarningLevel sets field value
func (o *BillingDataQuota) SetWarningLevel(v string) {
	o.WarningLevel.Set(&v)
}

// GetMessage returns the Message field value
func (o *BillingDataQuota) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *BillingDataQuota) SetMessage(v string) {
	o.Message = v
}

// GetPeriod returns the Period field value
func (o *BillingDataQuota) GetPeriod() BillingPeriod {
	if o == nil {
		var ret BillingPeriod
		return ret
	}

	return o.Period
}

// GetPeriodOk returns a tuple with the Period field value
// and a boolean to check if the value has been set.
func (o *BillingDataQuota) GetPeriodOk() (*BillingPeriod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Period, true
}

// SetPeriod sets field value
func (o *BillingDataQuota) SetPeriod(v BillingPeriod) {
	o.Period = v
}

func (o BillingDataQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingDataQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["current_usage_gb"] = o.CurrentUsageGb
	toSerialize["quota_gb"] = o.QuotaGb
	toSerialize["usage_percentage"] = o.UsagePercentage
	toSerialize["is_within_quota"] = o.IsWithinQuota
	toSerialize["is_unlimited"] = o.IsUnlimited
	toSerialize["warning_level"] = o.WarningLevel.Get()
	toSerialize["message"] = o.Message
	toSerialize["period"] = o.Period
	return toSerialize, nil
}

func (o *BillingDataQuota) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"current_usage_gb",
		"quota_gb",
		"usage_percentage",
		"is_within_quota",
		"is_unlimited",
		"warning_level",
		"message",
		"period",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBillingDataQuota := _BillingDataQuota{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBillingDataQuota)

	if err != nil {
		return err
	}

	*o = BillingDataQuota(varBillingDataQuota)

	return err
}

type NullableBillingDataQuota struct {
	value *BillingDataQuota
	isSet bool
}

func (v NullableBillingDataQuota) Get() *BillingDataQuota {
	return v.value
}

func (v *NullableBillingDataQuota) Set(val *BillingDataQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingDataQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingDataQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingDataQuota(val *BillingDataQuota) *NullableBillingDataQuota {
	return &NullableBillingDataQuota{value: val, isSet: true}
}

func (v NullableBillingDataQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingDataQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


