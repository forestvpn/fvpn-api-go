/*
ForestVPN API

ForestVPN API Documentation

API version: 3.0.0
Contact: support@forestvpn.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fvpn

import (
	"encoding/json"
)

// checks if the SetNodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetNodeRequest{}

// SetNodeRequest Serializer for setting a node by either ID or location.
type SetNodeRequest struct {
	// The ID of the node to set
	NodeId *string `json:"node_id,omitempty"`
	// latitude coordinate for location-based node selection
	Lat *float64 `json:"lat,omitempty"`
	// longitude coordinate for location-based node selection
	Lon *float64 `json:"lon,omitempty"`
	// Maximum distance from coordinates (format: '10km', '5mi')
	MaxDistance *string `json:"max_distance,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SetNodeRequest SetNodeRequest

// NewSetNodeRequest instantiates a new SetNodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetNodeRequest() *SetNodeRequest {
	this := SetNodeRequest{}
	var maxDistance string = "500km"
	this.MaxDistance = &maxDistance
	return &this
}

// NewSetNodeRequestWithDefaults instantiates a new SetNodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetNodeRequestWithDefaults() *SetNodeRequest {
	this := SetNodeRequest{}
	var maxDistance string = "500km"
	this.MaxDistance = &maxDistance
	return &this
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *SetNodeRequest) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetNodeRequest) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *SetNodeRequest) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *SetNodeRequest) SetNodeId(v string) {
	o.NodeId = &v
}

// GetLat returns the Lat field value if set, zero value otherwise.
func (o *SetNodeRequest) GetLat() float64 {
	if o == nil || IsNil(o.Lat) {
		var ret float64
		return ret
	}
	return *o.Lat
}

// GetLatOk returns a tuple with the Lat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetNodeRequest) GetLatOk() (*float64, bool) {
	if o == nil || IsNil(o.Lat) {
		return nil, false
	}
	return o.Lat, true
}

// HasLat returns a boolean if a field has been set.
func (o *SetNodeRequest) HasLat() bool {
	if o != nil && !IsNil(o.Lat) {
		return true
	}

	return false
}

// SetLat gets a reference to the given float64 and assigns it to the Lat field.
func (o *SetNodeRequest) SetLat(v float64) {
	o.Lat = &v
}

// GetLon returns the Lon field value if set, zero value otherwise.
func (o *SetNodeRequest) GetLon() float64 {
	if o == nil || IsNil(o.Lon) {
		var ret float64
		return ret
	}
	return *o.Lon
}

// GetLonOk returns a tuple with the Lon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetNodeRequest) GetLonOk() (*float64, bool) {
	if o == nil || IsNil(o.Lon) {
		return nil, false
	}
	return o.Lon, true
}

// HasLon returns a boolean if a field has been set.
func (o *SetNodeRequest) HasLon() bool {
	if o != nil && !IsNil(o.Lon) {
		return true
	}

	return false
}

// SetLon gets a reference to the given float64 and assigns it to the Lon field.
func (o *SetNodeRequest) SetLon(v float64) {
	o.Lon = &v
}

// GetMaxDistance returns the MaxDistance field value if set, zero value otherwise.
func (o *SetNodeRequest) GetMaxDistance() string {
	if o == nil || IsNil(o.MaxDistance) {
		var ret string
		return ret
	}
	return *o.MaxDistance
}

// GetMaxDistanceOk returns a tuple with the MaxDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetNodeRequest) GetMaxDistanceOk() (*string, bool) {
	if o == nil || IsNil(o.MaxDistance) {
		return nil, false
	}
	return o.MaxDistance, true
}

// HasMaxDistance returns a boolean if a field has been set.
func (o *SetNodeRequest) HasMaxDistance() bool {
	if o != nil && !IsNil(o.MaxDistance) {
		return true
	}

	return false
}

// SetMaxDistance gets a reference to the given string and assigns it to the MaxDistance field.
func (o *SetNodeRequest) SetMaxDistance(v string) {
	o.MaxDistance = &v
}

func (o SetNodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetNodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.Lat) {
		toSerialize["lat"] = o.Lat
	}
	if !IsNil(o.Lon) {
		toSerialize["lon"] = o.Lon
	}
	if !IsNil(o.MaxDistance) {
		toSerialize["max_distance"] = o.MaxDistance
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SetNodeRequest) UnmarshalJSON(data []byte) (err error) {
	varSetNodeRequest := _SetNodeRequest{}

	err = json.Unmarshal(data, &varSetNodeRequest)

	if err != nil {
		return err
	}

	*o = SetNodeRequest(varSetNodeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "node_id")
		delete(additionalProperties, "lat")
		delete(additionalProperties, "lon")
		delete(additionalProperties, "max_distance")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSetNodeRequest struct {
	value *SetNodeRequest
	isSet bool
}

func (v NullableSetNodeRequest) Get() *SetNodeRequest {
	return v.value
}

func (v *NullableSetNodeRequest) Set(val *SetNodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetNodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetNodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetNodeRequest(val *SetNodeRequest) *NullableSetNodeRequest {
	return &NullableSetNodeRequest{value: val, isSet: true}
}

func (v NullableSetNodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetNodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


